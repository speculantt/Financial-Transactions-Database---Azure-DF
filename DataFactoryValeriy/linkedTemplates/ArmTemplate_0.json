{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactoryValeriy"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileStorage1'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"AzureTableStorageReal_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorageReal'"
		},
		"FullFileDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'FullFileDatabase'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "coolstorageforfinancials"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorageReal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorageReal_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullFileDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('FullFileDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_import')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Movimientos",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "export.xls",
						"folderPath": "NewFiles",
						"container": "blobcontainer"
					},
					"range": "A8:E380",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "FECHA OPERACIÓN",
						"type": "String"
					},
					{
						"name": "FECHA VALOR",
						"type": "String"
					},
					{
						"name": "CONCEPTO",
						"type": "String"
					},
					{
						"name": "IMPORTE EUR",
						"type": "String"
					},
					{
						"name": "SALDO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fulldatabasefile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "fulldatabasefile.csv",
						"folderPath": "DatabaseFile",
						"container": "blobcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DateOperation",
						"type": "String"
					},
					{
						"name": "DateEffective",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Saldo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "File_import",
								"type": "DatasetReference"
							},
							"name": "NewFile",
							"description": "financial import from santander"
						},
						{
							"dataset": {
								"referenceName": "fulldatabasefile",
								"type": "DatasetReference"
							},
							"name": "csvdatabasefile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "fulldatabasefile",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddKey"
						},
						{
							"name": "AddKey1"
						},
						{
							"name": "RenameColumns"
						},
						{
							"name": "AddSource"
						},
						{
							"name": "AddSource1"
						},
						{
							"name": "FilterNulls"
						},
						{
							"name": "ExistingSetKeys"
						},
						{
							"name": "LookupExisting"
						},
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {FECHA OPERACIÓN} as string,",
						"          {FECHA VALOR} as string,",
						"          CONCEPTO as string,",
						"          {IMPORTE EUR} as string,",
						"          SALDO as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     limit: 200,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['inputdata','ProcessedFiles']) ~> NewFile",
						"source(output(",
						"          DateOperation as string,",
						"          DateEffective as string,",
						"          Description as string,",
						"          Amount as string,",
						"          Saldo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> csvdatabasefile",
						"FilterNulls derive(Key = crc32(concat({FECHA OPERACIÓN},{FECHA VALOR},{IMPORTE EUR},{SALDO}))) ~> AddKey",
						"csvdatabasefile derive(Key = crc32(concat(DateOperation,DateEffective,Amount,Saldo))) ~> AddKey1",
						"AddSource select(mapColumn(",
						"          DateOperation = {FECHA OPERACIÓN},",
						"          DateEffective = {FECHA VALOR},",
						"          Description = CONCEPTO,",
						"          Amount = {IMPORTE EUR},",
						"          Saldo = SALDO,",
						"          Key,",
						"          Source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenameColumns",
						"AddKey derive(Source = 'newfile') ~> AddSource",
						"AddKey1 derive(Source = 'database') ~> AddSource1",
						"NewFile filter(or(not(isNull({FECHA OPERACIÓN})),not(isNull({IMPORTE EUR})))) ~> FilterNulls",
						"AddSource1 select(mapColumn(",
						"          ExistingKey = Key",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ExistingSetKeys",
						"RenameColumns, ExistingSetKeys lookup(Key == ExistingKey,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupExisting",
						"AddSource1, LookupExisting union(byName: true)~> union1",
						"union1 select(mapColumn(",
						"          DateOperation,",
						"          DateEffective,",
						"          Description,",
						"          Amount,",
						"          Saldo,",
						"          Key,",
						"          Source,",
						"          ExistingKey",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DateOperation as string,",
						"          DateEffective as string,",
						"          Description as string,",
						"          Amount as string,",
						"          Saldo as string",
						"     ),",
						"     partitionFileNames:['fulldatabasefile.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DateOperation,",
						"          DateEffective,",
						"          Description,",
						"          Amount,",
						"          Saldo",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/File_import')]",
				"[concat(variables('factoryId'), '/datasets/fulldatabasefile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataUploadToAzureBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataUploadtoAzure",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"NewFile": {},
									"csvdatabasefile": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateData')]"
			]
		}
	]
}